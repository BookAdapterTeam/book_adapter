# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  plugins:
    - dart_code_metrics
  exclude:
    - "lib/generated_plugin_registrant.dart"
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    # This is generated from the i18n vscode extension
    - "**/i18n.dart"
    - "lib/generated/intl/messages*.dart"

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # Single quotes are easier to type and don't compromise on readability.
    prefer_single_quotes: true

    # Type annotations are sometimes neccessary for readability
    omit_local_variable_types: false

    # Better to declare variables as final
    prefer_final_locals: true

    # Better to leave it up to the programmer
    prefer_int_literals: false

    # It is better to group related packages
    sort_pub_dependencies: false

    directives_ordering: true

    unawaited_futures: true

    avoid_dynamic_calls: true

    avoid_returning_null_for_future: true

    avoid_type_to_string: true

    cancel_subscriptions: true

    close_sinks: true

    # comment_references: true

    # Note: This rule is currently experimental.
    invariant_booleans: true

    literal_only_boolean_expressions: true

    # AVOID throwing exceptions in finally blocks.
    throw_in_finally: true

    unnecessary_statements: true

    use_build_context_synchronously: true

    always_declare_return_types: true

    flutter_style_todos: false

    todo: false

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

# Restart your IDE after changing any of these
dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 50
  metrics-exclude:
    - test/**
    - test_driver/**
  rules:
    # - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    # - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else
    - avoid-ignoring-return-values
    - avoid-non-null-assertion
    - avoid-unused-parameters
    - no-magic-number
    - no-object-declaration
